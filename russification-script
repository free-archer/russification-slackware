#!/bin/bash
#####
# Скрипт русификации консоли и Х-сессии в UTF-8 с
# запросом на комбинацию клавиш переключения раскладки клавиатуры.

# Created by Graf (graf on slackware.su) 09.2016
# Last changed at 06.2017 - version 4

# Last editor Free Archer 2021
# The script was tested on Slackware 15 (current)
#####

#Область настроек
LILOCFG="/etc/lilo.conf"
LILOBIN="/sbin/lilo"
RCFONT="/etc/rc.d/rc.font"
LALIAS="/usr/share/locale/locale.alias"
PLANG="/etc/profile.d/lang.sh"
RCKEYMAP="/etc/rc.d/rc.keymap"
KEYS=""
# Копируем раскладку по AltShift
KBD_AS="/usr/share/kbd/keymaps/i386/qwerty/ruwin_alt_sh-UTF-8.map.gz"

 # Проверка архитектуры
ARCH=$( uname -m )

if [[ "$ARCH" == "x86_64" ]]
then
 ARCH="x86_64"
else
 ARCH=""
fi

# счетчик, если больше нуля, просим перезагрузку
COUNT=0

# Надо быть с правами рута
if [ "$UID" -ne "0" ]
then
   echo "You must be root."
   exit
fi

# Проверяем версию Slackware и назначаем соответствующие пути к man.conf
SVERSION=$(cat /etc/slackware-version)

case $SVERSION in 
"Slackware 14.2" ) 
  MANCONF="/etc/man.conf"
  XKB="/etc/X11/xorg.conf.d/90-keyboard-layout.conf"
  KLC="/usr/share/X11/xorg.conf.d/90-keyboard-layout.conf"
  ;;
"Slackware 14.2+" | "Slackware 15"  ) 
  XKB="/etc/X11/xorg.conf.d/90-keyboard-layout-evdev.conf"
  KLC="/usr/share/X11/xorg.conf.d/90-keyboard-layout-evdev.conf"
  MANCONF="/etc/man_db.conf"
  ;;
esac 

#УСЛОВИЯ
#Спрашиваем нужно ли русифицировать консоль
need_ru_console()
{
 while true; do
 echo "Файл /etc/rc.d/rc.font будет перезаписан новым шрифтом, старый файд будет переименован в /etc/rc.d/rc.font.backup!"
    read -p "Вы хотитке русифицировать консоль? (y/n): " RU_CONSOLE
    case $RU_CONSOLE in
        [Yy]* )RU_CONSOLE=Y; break;; 
        [Nn]* )RU_CONSOLE=N; break;;
        * ) echo "Please answer [y]es or [n]o.";;
    esac
 done
}
#Спрашиваем нужно ли русифицировать man
need_ru_man()
{
 while true; do
    read -p "Вы хотитке русифицировать страницы помощи man? (y/n): " RU_MAN
    case $RU_MAN in
        [Yy]* )RU_MAN=Y; break;; 
        [Nn]* )RU_MAN=N; break;;
        * ) echo "Please answer [y]es or [n]o.";;
    esac
 done
}
#Спрашиваем нужно ли приводить lilo к utf-8
need_ru_lilo()
{
 while true; do
    read -p "Нужно приводить lilo к utf-8? (y/n): " RU_LILO
    case $RU_LILO in
        [Yy]* )RU_LILO=Y; break;; 
        [Nn]* )RU_LILO=N; break;;
        * ) echo "Please answer [y]es or [n]o.";;
    esac
 done
}

#ОСНОВНЫЕ ФУНКЦИИ
# Функция назначения клавиш переключения раскладки
switching_keys()
{
 while true; do
    read -p "Select a keyboard layout switching keys: (a - Alt+Shift; c - Ctrl+Shift; l - CapsLock): " RPC
    case $RPC in
        [Aa]* ) KEYS="ruwin_alt_sh-UTF-8"; break;;
        [Cc]* ) KEYS="ruwin_ct_sh-UTF-8";break;;
        [Ll]* ) KEYS="ruwin_cplk-UTF-8";break;;
        * ) echo "Please select [a] [c] or [l]";;
    esac
 done
}

# Функция перезагрузки компа
reboot_pc()
{
 while true; do
    read -p "It is necessary to reboot, wish to restart your computer now? (y/n): " RPC
    case $RPC in
        [Yy]* ) /sbin/reboot; break;;
        [Nn]* )break;;
        * ) echo "Please answer [y]es or [n]o.";;
    esac
 done
}

# Функция перезаписи rc.font новыми значениями
ru_keymap()
{
#### мкняем язык в консоль  locale ####
UTFSTR=$(grep 'ru_RU.UTF-8' $PLANG)

# Чтобы кучу раз не писало при повторных запусках, проверяем наличие строки
if [ -z "$UTFSTR" ]
then
 COUNT=$(($COUNT+1))
 cp $PLANG $PLANG.backup &&
 cat $PLANG.backup | sed s/"^[^#]"/"#&"/ > $PLANG &&
 cat << EOF >> $PLANG

# Russian locale
export LANG=ru_RU.UTF-8
EOF

fi
#### закончили менять язык ####

#### Правим алиасы ####
AUTFSTR=$(grep 'ru_RU.UTF-8' $LALIAS)

# Чтобы кучу раз не писало при повторных запусках, проверяем наличие строки
if [ -z "$AUTFSTR" ]
then
  COUNT=$(($COUNT+1))
  echo 'Aliases correction...'
  cp $LALIAS $LALIAS.backup &&
  cat $LALIAS.backup | sed /"ru_RU.ISO-8859-5"/c"russian\t\tru_RU.UTF-8\nru_RU\t\tru_RU.UTF-8\nru\t\tru_RU.UTF-8" > $LALIAS
fi
#### Правим алиасы ####

   [ ! -f "$KBD_AS" ] && cp ./ruwin_alt_sh-UTF-8.map.gz $KBD_AS 
       
  COUNT=$(($COUNT+1))
  
  echo 'Enable russian font in console...'
  cp $RCFONT $RCFONT.backup

cat << EOF > $RCFONT
setfont -v Cyr_a8x16
for n in 1 2 3 4 5 6; do
   echo -ne "\033%G" > /dev/tty\$n
done

# Load the keyboard map
EOF

echo "loadkeys $KEYS" 1>>$RCFONT

chmod +x $RCFONT
chmod -x $RCKEYMAP
}

ru_man()
{
   MANSTR=$(grep 'groff -Dutf8 -Tutf8 -mandoc' $MANCONF)

   if [ -z "$MANSTR" ]
   then
   echo 'Enable russian mans...'
   cp $MANCONF $MANCONF.backup &&
   cat $MANCONF.backup | sed /"NROFF\t\t\/usr\/bin\/nroff -mandoc"/c"NROFF\t\t\/usr\/bin\/groff -Dutf8 -Tutf8 -mandoc" > $MANCONF && COUNT=$(($COUNT+1))
   fi   
}

######## change lilo ###############
set_lilo_utf8()
{
   cp $LILOCFG $LILOCFG.backup
# Находим append
  FD=$(grep 'append=' $LILOCFG)

# Если изменения уже производились, уходим проверив на всякий случай значение, если 0 меняем на 1
  if [[ "$FD" == *\"*append* && "$FD" == "#"* ]]
  then
  GREP1=$(grep '^append=\" vt.default_utf8=1' $LILOCFG) && return
  GREP2=$(grep '^append=\" vt.default_utf8=0' $LILOCFG) && sed -i s'/vt.default_utf8=0/vt.default_utf8=1/' $LILOCFG && start_lilo && return

# Eсли не нашли или закоментарен, то добавляем строку перед первым boot
  elif [[ -z "$FD" || "$FD" == "#"* ]]
   then
     sed -i '0,/^boot/{/^boot/i append=" vt.default_utf8=1"
     }' $LILOCFG
   start_lilo

# Если нашли, то проверяем наличие и значение vt.default_utf8 и в случае 0 меняем на 1
   elif [[ $FD == *vt.default_utf8=0* ]]
   then
    sed -i s'/vt.default_utf8=0/vt.default_utf8=1/' $LILOCFG && start_lilo

# Если нашли, но значение vt.default_utf8=1, уходим ничего не делая
   elif [[ $FD == *vt.default_utf8=1* ]]
   then
    return

# В остальных случаях добавляем в начало к существующим параметрам vt.default_utf8=1
   else
    sed -i s'/append="/append="vt.default_utf8=1 /' $LILOCFG && start_lilo
  fi
}

### меняем язык в X ###
ru_langugeX()
{
#### Переключение раскладки в X ####
echo "Изменяем раскладку клавиатуры в Х-ах"

if [ ! -f "$XKB" ]
then
  [ ! -f "$KLC" ] && echo "file $KLC not found, script terminated. BYE!" && exit
 
  cp $KLC $XKB
fi

   sed -i '/^#/!s/"us"*$/"us,ru"/' $XKB

  if [[ "$KEYS" == "ruwin_alt_sh-UTF-8" ]]
  then
   sed -i '/^#/!s/"terminate:ctrl_alt_bksp.*$/"terminate:ctrl_alt_bksp,grp:alt_shift_toggle"/' $XKB
   echo "Switching keys is - AltShift"      
  elif [[ "$KEYS" == "ruwin_cplk-UTF-8" ]]
  then
     sed -i '/^#/!s/"terminate:ctrl_alt_bksp.*$/"terminate:ctrl_alt_bksp,grp:caps_toggle"/' $XKB
     echo "Switching keys is - CapsLock"
  else
     sed -i '/^#/!s/"terminate:ctrl_alt_bksp.*$/"terminate:ctrl_alt_bksp,grp:ctrl_shift_toggle"/' $XKB
     echo "Switching keys is - CtrlShift"
  fi

COUNT=$(($COUNT+1))
}

# Функция запуска lilo
start_lilo()
{
 while true; do
    read -p "Lilo configuration has been changed. Do you wish to run ${LILOBIN} (y/n): " RUNLILO
    case $RUNLILO in
        [Yy]* ) $LILOBIN; COUNT=$(($COUNT+1));break;;
        [Nn]* )break;;
        * ) echo "Please answer [y]es or [n]o.";;
    esac
 done
}


#START
switching_keys

need_ru_console
need_ru_man
need_ru_lilo

ru_langugeX

if [ $RU_CONSOLE = "Y" ]
then
ru_keymap
fi

if [ $RU_MAN = "Y" ]
then
ru_man
fi

if [ $RU_LILO = "Y" ]
then
 set_lilo_utf8
fi

if [ $COUNT != 0 ]
then
 reboot_pc
fi